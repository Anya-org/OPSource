 name: PR Automation

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  pr-checks:
    name: PR Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Check PR Title
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
            revert
            
      - name: Check PR Description
        uses: actions/github-script@v6
        with:
          script: |
            const description = context.payload.pull_request.body;
            if (!description || description.length < 50) {
              core.setFailed('PR description must be at least 50 characters long');
            }
            
      - name: Check Branch Name
        uses: actions/github-script@v6
        with:
          script: |
            const branchName = context.payload.pull_request.head.ref;
            const validPatterns = [
              /^feature\/.*/,
              /^bugfix\/.*/,
              /^hotfix\/.*/,
              /^release\/.*/
            ];
            
            if (!validPatterns.some(pattern => pattern.test(branchName))) {
              core.setFailed('Branch name must follow the pattern: feature/*, bugfix/*, hotfix/*, or release/*');
            }
            
      - name: Check File Changes
        uses: actions/github-script@v6
        with:
          script: |
            const changedFiles = context.payload.pull_request.changed_files;
            const maxFiles = 20;
            
            if (changedFiles > maxFiles) {
              core.setFailed(`PR contains too many changes (${changedFiles} files). Maximum allowed is ${maxFiles} files.`);
            }
            
      - name: Add Labels
        uses: actions/github-script@v6
        with:
          script: |
            const labels = context.payload.pull_request.labels.map(label => label.name);
            const needsReview = !labels.includes('needs-review');
            
            if (needsReview) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                labels: ['needs-review']
              });
            }
            
      - name: Assign Reviewers
        uses: actions/github-script@v6
        with:
          script: |
            const reviewers = ['reviewer1', 'reviewer2']; // Replace with actual reviewer usernames
            await github.rest.pulls.requestReviewers({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              reviewers: reviewers
            });