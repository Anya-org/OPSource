name: Workflow Orchestration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  security:
    name: Security Checks
    uses: ./.github/workflows/security-scan.yml

  ai-validation:
    name: AI Model Validation
    needs: [security]
    uses: ./.github/workflows/ai-validation.yml
    with:
      model_version: ${{ github.event.inputs.model_version || 'latest' }}

  benchmarks:
    name: Performance Benchmarks
    needs: [security]
    uses: ./.github/workflows/benchmark.yml

  main-pipeline:
    name: Main CI/CD Pipeline
    needs: [security, ai-validation, benchmarks]
    uses: ./.github/workflows/ci.yml

  docs:
    name: Documentation
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [main-pipeline]
    uses: ./.github/workflows/docs-deployment.yml

  branch-maintenance:
    name: Branch Maintenance
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [main-pipeline]
    uses: ./.github/workflows/branch_maintenance.yml

  notify:
    name: Final Notification
    needs: [main-pipeline, docs, branch-maintenance]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Check workflow status
        uses: actions/github-script@v7
        with:
          script: |
            const jobs = ['security', 'ai-validation', 'benchmarks', 'main-pipeline', 'docs', 'branch-maintenance'];
            const status = jobs.every(job => job.status === 'success') ? '✅' : '❌';
            const message = `${status} CI/CD Pipeline Status:\n\n`;
            jobs.forEach(job => {
              message += `- ${job}: ${job.status === 'success' ? '✅' : '❌'}\n`;
            });
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: message
            });
