name: AI Labeling System

on:
  issues:
    types: [opened, edited, labeled, unlabeled]
  pull_request:
    types: [opened, edited, labeled, unlabeled]

jobs:
  validate-and-label:
    runs-on: ubuntu-latest
    steps:
      - name: Validate AI Labels
        uses: actions/github-script@v6
        with:
          script: |
            const issue = context.payload.issue || context.payload.pull_request;
            if (!issue) return;

            const aiPrefixes = ['AIR-', 'AIS-', 'AIT-', 'AIM-', 'AIP-', 'AIE-'];
            const title = issue.title;
            
            // Check if title starts with valid AI prefix
            const hasValidPrefix = aiPrefixes.some(prefix => title.startsWith(prefix));
            
            if (!hasValidPrefix) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                body: `⚠️ Issue title should start with one of the following AI prefixes: ${aiPrefixes.join(', ')}\n\nPlease update the title to follow our AI labeling convention.`
              });
              return;
            }

            // Validate format AIX-XXX where X is a number
            const formatRegex = /^AI[RSITPE]-\d{3,}:/;
            if (!formatRegex.test(title)) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                body: `⚠️ Issue title format should be: AIX-XXX: Description\nWhere XXX is a number with at least 3 digits.\n\nExample: AIR-001: Add new feature`
              });
              return;
            }

            // Apply appropriate labels based on prefix
            const prefix = title.split('-')[0];
            const labelMappings = {
              'AIR': ['enhancement', 'ai-improvement'],
              'AIS': ['documentation', 'specification'],
              'AIT': ['bug', 'ai-issue'],
              'AIM': ['integration', 'module'],
              'AIP': ['pattern', 'ai-pattern'],
              'AIE': ['enhancement', 'ai-enhancement']
            };

            const labelsToAdd = labelMappings[prefix] || [];
            if (labelsToAdd.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issue.number,
                labels: labelsToAdd
              });
            }

      - name: Check Related Items
        uses: actions/github-script@v6
        with:
          script: |
            const issue = context.payload.issue || context.payload.pull_request;
            if (!issue) return;

            const body = issue.body;
            const relatedItemRegex = /(?:Related|Depends on|Blocks|Part of):\s*#(\d+)/gi;
            const matches = [...body.matchAll(relatedItemRegex)];

            if (matches.length > 0) {
              const relatedItems = await Promise.all(matches.map(async match => {
                const relatedNumber = match[1];
                try {
                  const { data: related } = await github.rest.issues.get({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: relatedNumber
                  });
                  return {
                    number: relatedNumber,
                    title: related.title,
                    state: related.state
                  };
                } catch (e) {
                  return null;
                }
              }));

              const validItems = relatedItems.filter(item => item !== null);
              if (validItems.length > 0) {
                const summary = validItems.map(item => 
                  `- #${item.number} (${item.state}): ${item.title}`
                ).join('\n');

                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  body: `📎 Related Items Summary:\n${summary}`
                });
              }
            }
