name: Release Flow Management

on:
  push:
    branches:
      - development
      - 'rc/*'
      - main
  pull_request:
    types: [closed]
    branches:
      - development
      - 'rc/*'
      - main

jobs:
  manage-release-flow:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      # Create Release Candidate from Development
      - name: Create RC Branch
        if: |
          github.event_name == 'push' &&
          github.ref == 'refs/heads/development' &&
          !contains(github.event.head_commit.message, 'chore(deps)')
        run: |
          RC_VERSION=$(date +%Y%m%d)-$(git rev-parse --short HEAD)
          git checkout -b rc/$RC_VERSION development
          git push origin rc/$RC_VERSION
          gh pr create \
            --title "Release Candidate $RC_VERSION" \
            --body "Automated release candidate from development branch" \
            --base main \
            --head rc/$RC_VERSION \
            --label "release-candidate"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Merge to Main and Create Release
      - name: Create Release
        if: |
          github.event_name == 'pull_request' &&
          github.event.pull_request.merged == true &&
          startsWith(github.event.pull_request.head.ref, 'rc/') &&
          github.event.pull_request.base.ref == 'main'
        run: |
          VERSION=$(echo ${{ github.event.pull_request.head.ref }} | sed 's/rc\///')
          git tag -a v$VERSION -m "Release v$VERSION"
          git push origin v$VERSION
          gh release create v$VERSION \
            --title "Release v$VERSION" \
            --notes "Release candidate merged to main" \
            --target main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Sync Main back to Development
      - name: Sync Development
        if: |
          github.event_name == 'push' &&
          github.ref == 'refs/heads/main'
        run: |
          git checkout development
          git merge --no-ff main
          git push origin development
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Automated Tests for Release Candidates
  test-release-candidate:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/heads/rc/')
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          
      - name: Run Tests
        run: cargo test --all-features --verbose
        
      - name: Run Security Audit
        run: |
          cargo install cargo-audit
          cargo audit
