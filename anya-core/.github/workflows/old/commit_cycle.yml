name: Automated Commit Cycle

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      commit_message:
        description: 'Commit message'
        required: true
        default: 'chore: Automated update'

jobs:
  commit-cycle:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'
        fetch-depth: 0
        token: ${{ secrets.REPO_TOKEN }}

    - name: Setup Git
      run: |
        git config --global user.name 'GitHub Actions Bot'
        git config --global user.email 'actions@github.com'

    - name: Process Submodules
      run: |
        for submodule in dash33 dependencies enterprise; do
          echo "Processing $submodule..."
          cd $submodule
          
          # Pull latest changes
          git checkout main
          git pull origin main
          
          # Check for changes
          if [[ -n "$(git status --porcelain)" ]]; then
            # Stage and commit changes
            git add .
            git commit -m "feat($submodule): ${{ github.event.inputs.commit_message || 'Automated update' }}"
            git push origin main
            echo "✅ $submodule: Changes committed and pushed"
          else
            echo "ℹ️ $submodule: No changes to commit"
          fi
          
          cd ..
        done
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}

    - name: Update Main Repository References
      run: |
        # Update submodule references
        git add dash33 dependencies enterprise
        git commit -m "chore: Update submodule references" || echo "No reference updates needed"
        
        # Stage and commit main repository changes
        if [[ -n "$(git status --porcelain)" ]]; then
          git add .
          git commit -m "feat: ${{ github.event.inputs.commit_message || 'Automated update' }}"
          git push origin ${GITHUB_REF#refs/heads/}
          echo "✅ Main repository: Changes committed and pushed"
        else
          echo "ℹ️ Main repository: No changes to commit"
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}

    - name: Run Tests
      run: |
        # Add your test commands here
        echo "Running tests..."
        # Example: dart test
        
    - name: Check Code Quality
      run: |
        # Add your code quality checks here
        echo "Checking code quality..."
        # Example: dart analyze
        
    - name: Create Release Tag
      if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
      run: |
        VERSION=$(date +'%Y.%m.%d-%H%M')
        git tag -a "v$VERSION" -m "Release v$VERSION"
        git push origin "v$VERSION"
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}

    - name: Notify on Success
      if: success()
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: '✅ Commit cycle completed successfully!'
          })
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}

    - name: Notify on Failure
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: '❌ Commit cycle failed. Please check the workflow logs.'
          })
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
