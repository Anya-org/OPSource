name: Test Coverage

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  coverage:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov coverage-badge
          
      - name: Run tests with coverage
        run: |
          pytest --cov=anya_core --cov-report=xml --cov-report=html
          
      - name: Generate coverage badge
        run: |
          coverage-badge -o coverage.svg -f
          
      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: |
            coverage.xml
            htmlcov
            coverage.svg
            
      - name: Update PR with coverage
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const coverage = fs.readFileSync('coverage.xml', 'utf8');
            const percentage = coverage.match(/line-rate="([\d.]+)"/)[1] * 100;
            
            const body = `## Coverage Report
            
            Total coverage: ${percentage.toFixed(2)}%
            
            <details>
            <summary>Detailed Report</summary>
            
            \`\`\`xml
            ${coverage}
            \`\`\`
            </details>`;
            
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: body
            });
