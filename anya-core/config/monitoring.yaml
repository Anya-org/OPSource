# Anya Monitoring Configuration

monitoring:
  health_check:
    interval: 300  # seconds
    log_file: "../logs/ops_health.log"
    metrics_file: "../metrics/system_metrics.json"
    thresholds:
      cpu: 90
      memory: 90
      disk: 90

  prometheus:
    port: 9090
    metrics_path: "/metrics"
    scrape_interval: 60  # seconds

  alerts:
    enabled: true
    channels:
      - type: "log"
        path: "../logs/alerts.log"
      - type: "prometheus"
        endpoint: "http://localhost:9090/metrics"

  log_retention:
    enabled: true
    max_age_days: 30
    max_size_mb: 500
    min_free_space_percent: 20
    requirements:
      - type: "backup_exists"
        path: "../backups/logs"
      - type: "metrics_exported"
        status: true
      - type: "min_retention_period"
        days: 7

  log_rotation:
    enabled: true
    max_files: 5
    compress: true
    size_trigger: "100M"

  log_backup:
    enabled: true
    schedule: "0 0 * * *"  # Daily at midnight
    retention:
      daily: 7
      weekly: 4
      monthly: 3

  deprecation:
    enabled: true
    system_requirements:
      ml:
        model_versions:
          max_kept: 3
          strategy: "performance_based"  # Keep best performing versions
        training_data:
          max_age_days: 90
          min_performance_threshold: 0.85
        checkpoints:
          max_per_model: 5
          keep_best: true
        embeddings:
          recompute_threshold_days: 30
          version_linked: true  # Link to model versions
        
      performance:
        cpu_threshold: 80
        memory_threshold: 85
        disk_threshold: 90
        action: "aggressive"  # Aggressive cleanup when thresholds exceeded
        
      dependencies:
        check_unused: true
        max_versions: 2
        exclude_critical: true
        
      linked_systems:
        - name: "web5_search"
          depends_on: ["embeddings", "models"]
          sync_deprecation: true
        - name: "bitcoin_validation"
          depends_on: ["models", "scripts"]
          priority: "high"
        - name: "rgb_protocol"
          depends_on: ["templates", "scripts"]
          sync_deprecation: true
    
    resources:
      temp:
        path: "../temp"
        max_age_days: 1
        requirements:
          - type: "not_in_use"
            timeout_minutes: 60
      
      cache:
        path: "../cache"
        max_age_days: 7
        requirements:
          - type: "not_accessed"
            timeout_hours: 24
          - type: "backed_up"
            status: true
        archive:
          enabled: true
          retention_days: 90
      
      metrics:
        path: "../metrics"
        max_age_days: 30
        requirements:
          - type: "exported"
            status: true
          - type: "archived"
            status: true
        archive:
          enabled: true
          retention_days: 365
      
      search_index:
        path: "../web5/advanced_search/cache"
        max_age_days: 14
        requirements:
          - type: "not_in_use"
            timeout_minutes: 30
          - type: "backed_up"
            status: true
        backup:
          enabled: true
          retention_days: 180

      ml_models:
        path: "../ml/models"
        requirements:
          - type: "performance"
            min_threshold: 0.85
          - type: "usage"
            min_requests: 100
          - type: "freshness"
            max_age_days: 90
        versioning:
          keep_best: 3
          metric: "f1_score"
        
      ml_data:
        path: "../ml/data"
        requirements:
          - type: "quality"
            min_score: 0.8
          - type: "coverage"
            min_percent: 90
        archive:
          enabled: true
          retention_days: 180
        
      embeddings:
        path: "../ml/embeddings"
        requirements:
          - type: "model_version"
            match: true
          - type: "freshness"
            max_age_days: 30
        recompute:
          schedule: "weekly"
          conditions: ["model_updated", "data_changed"]
        
      checkpoints:
        path: "../ml/checkpoints"
        requirements:
          - type: "performance_rank"
            top_k: 5
          - type: "model_version"
            match: true
        cleanup:
          keep_best: true
          max_per_model: 5

  cleanup:
    schedule: "0 2 * * *"  # Run at 2 AM daily
    disk_threshold: 85  # Force cleanup if disk usage above 85%

services:
  - name: "web5_service"
    type: "core"
    healthcheck:
      endpoint: "/health"
      interval: "30s"
      timeout: "5s"
      retries: 3
      start_period: "60s"
  - name: "bitcoin_service"
    type: "core"
    healthcheck:
      endpoint: "/health"
      interval: "30s"
      timeout: "5s"
      retries: 3
      start_period: "60s"
  - name: "search_service"
    type: "core"
    healthcheck:
      endpoint: "/health"
      interval: "30s"
      timeout: "5s"
      retries: 3
      start_period: "60s"

logging:
  level: "info"
  format: "json"
  output:
    file:
      path: "../logs/app.log"
      rotate: true
      max_size: "100M"
      max_files: 5
    console:
      enabled: true
      color: true
    metrics:
      enabled: true
      prometheus: true
