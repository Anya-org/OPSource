name: Basic Version Management

on:
  push:
    branches:
      - main
      - development
  pull_request:
    types: [closed]
    branches:
      - main
      - development

jobs:
  update-version:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Update Version File
        run: |
          # Create or update version file
          VERSION_FILE=VERSION
          CURRENT_VERSION=$(cat $VERSION_FILE 2>/dev/null || echo "0.0.0")
          
          # Simple version bump based on branch
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            # Production release - bump minor version
            IFS='.' read -r -a version_parts <<< "$CURRENT_VERSION"
            NEW_VERSION="${version_parts[0]}.$(( ${version_parts[1]} + 1 )).0"
          else
            # Development - bump patch version
            IFS='.' read -r -a version_parts <<< "$CURRENT_VERSION"
            NEW_VERSION="${version_parts[0]}.${version_parts[1]}.$(( ${version_parts[2]} + 1 ))"
          fi
          
          echo "$NEW_VERSION" > $VERSION_FILE
          
          # Update changelog if version changed
          if [[ "$NEW_VERSION" != "$CURRENT_VERSION" ]]; then
            echo "## [$NEW_VERSION] - $(date +%Y-%m-%d)" >> CHANGELOG.md
            echo "" >> CHANGELOG.md
            echo "* $(git log -1 --pretty=%B)" >> CHANGELOG.md
            echo "" >> CHANGELOG.md
            
            # Commit version changes
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add VERSION CHANGELOG.md
            git commit -m "chore(version): bump to $NEW_VERSION" || true
            git push || true
          fi
